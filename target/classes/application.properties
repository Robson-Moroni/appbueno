server.port = 777

server.error.include-stacktrace=always
 
loogin.level.root=DEBUG

server.max-http-header-size=20000

spring.http.multipart.max-file-size=2000MB
spring.http.multipart.max-request-size=2000MB


# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.

spring.datasource.url=jdbc:mysql://amalog.cvgnhrtawtew.us-east-1.rds.amazonaws.com:3306/amalog?autoReconnect=true&useSSL=false&serverTimezone=America/Fortaleza
spring.datasource.username=admin
spring.datasource.password=amalog*2020

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#security.oauth2.resource.filter-order = 3

#Timeout de sessï¿½o
server.servlet.session.timeout=10m

#logging.level.org.springframework.ws=TRACE